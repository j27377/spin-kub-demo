# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e85e39ff-6fe9-47a4-af8e-5e05f84fad36'
  imageRepository: 'devopsheroes.azurecr.io'
  containerRegistry: 'hellworld'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'devopsheroes30968733-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'j27377spinkubdemo-2143.spinnaker'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@0
            displayName: 'Set Canary Image'
            inputs:
              namespace: default
              command: set
              arguments: 'image deployments/codefestkudosfrontend api=$(containerRegistry)/$(imageRepository):$(tag)  --record'
          - task: Kubernetes@0
            displayName: 'Scale Canary 1'
            inputs:
              namespace: default
              command: scale
              arguments: 'deployments/codefestkudosfrontend --replicas=1'

